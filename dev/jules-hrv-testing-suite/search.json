[{"path":[]},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"phase-1-core-reorganization","dir":"","previous_headings":"hrvester 1.0 Roadmap","what":"Phase 1: Core Reorganization","title":"NA","text":"Target: v0.4.0","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"code-restructuring","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 1: Core Reorganization","what":"Code Restructuring","title":"NA","text":"Move FIT file processing logic core.R Consolidate file reading operations Add input validation Separate HR filtering get_HR’s core functionality Move core algorithms (HRV calculation, moving averages) Remove redundant functions Standardize parameter naming Add algorithm documentation Review consolidate analysis functions Improve parameter validation Add missing documentation Move rr interval validation preprocessing Move non-fit-file touching functions extract_rr_data ","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"testing-updates","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 1: Core Reorganization","what":"Testing Updates","title":"NA","text":"Update test files match new structure Add tests edge cases Verify test coverage remains high Unify cache data templates tests","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"phase-2-error-handling-enhancement","dir":"","previous_headings":"hrvester 1.0 Roadmap","what":"Phase 2: Error Handling Enhancement","title":"NA","text":"Target: v0.5.0","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"unify-data-representation","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 2: Error Handling Enhancement","what":"Unify Data Representation","title":"NA","text":"Unify result cache templates Document data format","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"error-system-implementation","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 2: Error Handling Enhancement","what":"Error System Implementation","title":"NA","text":"Define standard error types Implement consistent error messages Add input validation across public functions Improve error recovery mechanisms","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 2: Error Handling Enhancement","what":"Documentation","title":"NA","text":"Document error handling patterns Add error handling examples Update function documentation error cases","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 2: Error Handling Enhancement","what":"Testing","title":"NA","text":"Add error condition tests Verify error message consistency Test recovery mechanisms","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"phase-3-api-finalization","dir":"","previous_headings":"hrvester 1.0 Roadmap","what":"Phase 3: API Finalization","title":"NA","text":"Target: v0.6.0","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"public-api","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 3: API Finalization","what":"Public API","title":"NA","text":"FInalize official public API Mark internal functions appropriate naming Document API stability guarantees Create API documentation","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"documentation-enhancement","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 3: API Finalization","what":"Documentation Enhancement","title":"NA","text":"Complete function documentation Add examples public functions Create vignettes common use cases Update README clear installation/usage","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"final-testing","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 3: API Finalization","what":"Final Testing","title":"NA","text":"Complete test coverage public API Add integration tests Performance testing","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"phase-4-release-preparation","dir":"","previous_headings":"hrvester 1.0 Roadmap","what":"Phase 4: Release Preparation","title":"NA","text":"Target: v1.0.0","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"final-review","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 4: Release Preparation","what":"Final Review","title":"NA","text":"Code review components Documentation review Test coverage review Performance review","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"release-preparation","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 4: Release Preparation","what":"Release Preparation","title":"NA","text":"Update DESCRIPTION Update NEWS.md Version number update Final README review CRAN submission preparation","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"post-release","dir":"","previous_headings":"hrvester 1.0 Roadmap > Phase 4: Release Preparation","what":"Post-Release","title":"NA","text":"Create release tags Update documentation website Announce release Create maintenance schedule","code":""},{"path":"https://sims1253.github.io/hrvester/CONTRIBUTING.html","id":"future-considerations-post-10","dir":"","previous_headings":"hrvester 1.0 Roadmap","what":"Future Considerations (Post 1.0)","title":"NA","text":"Enhanced visualization features Additional caching optimizations (DuckDB?) Interactive dashboard elements Additional sport-specific metrics Performance optimizations","code":""},{"path":"https://sims1253.github.io/hrvester/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 hrvester authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sims1253.github.io/hrvester/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maximilian Scholz. Author, maintainer.","code":""},{"path":"https://sims1253.github.io/hrvester/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Scholz M (2025). hrvester: hrvester: Heart Rate Variability Analysis FIT Files. R package version 0.3.4.9000, https://github.com/sims1253/hrvester.","code":"@Manual{,   title = {hrvester: hrvester: Heart Rate Variability Analysis from FIT Files},   author = {Maximilian Scholz},   year = {2025},   note = {R package version 0.3.4.9000},   url = {https://github.com/sims1253/hrvester}, }"},{"path":[]},{"path":"https://sims1253.github.io/hrvester/index.html","id":"what-is-hrv","dir":"","previous_headings":"","what":"What is HRV?","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"Heart Rate Variability (HRV) variation time intervals heartbeats. ’s non-invasive measure reflects activity autonomic nervous system, can used assess body’s readiness training, recovery status, overall stress levels.","code":""},{"path":"https://sims1253.github.io/hrvester/index.html","id":"what-is-hrvester","dir":"","previous_headings":"","what":"What is hrvester?","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"hrvester R package designed analyzing Heart Rate Variability (HRV) data .fit files generated Garmin devices (potentially others). focuses orthostatic tests (measuring HRV laying standing ) provide insights athlete’s recovery readiness training.","code":""},{"path":"https://sims1253.github.io/hrvester/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"RR Interval Preprocessing: Robust artifact detection, physiological plausibility checks, moving average filtering ensure data quality. HRV Metric Calculation: Calculates key HRV metrics like RMSSD SDNN. Resting Heart Rate Estimation: Uses robust algorithm determine resting heart rate. Heart Rate Recovery Analysis: Calculates HRR standing. Neural Recovery Metrics: Calculates composite neural recovery score inspired BioForce HRV methodology. Sports-Specific Analytics: Provides specialized metrics recommendations Brazilian Jiu-Jitsu strength training. Automated Reporting: Generates daily report summarizing HRV status providing training recommendations. Optimized Processing: Uses furrr parallel processing multiple .fit files. Advanced Caching: Version-aware cache invalidation avoid reprocessing unchanged files. Based Published Research: Implements algorithms metrics established sources sports science physiology.","code":""},{"path":"https://sims1253.github.io/hrvester/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"","code":"# Install from GitHub remotes::install_github(\"sims1253/hrvester\")"},{"path":"https://sims1253.github.io/hrvester/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"need bring fit file","code":"library(hrvester)  # 1. Process a single .fit file: result <- process_fit_file(\"path/to/your/file.fit\") # Replace with your file path print(result)  # 2. Process a directory of .fit files (with caching): # Create a directory and put your .fit files in it dir_path <- \"path/to/your/fit/files\"  # Replace with your directory path metrics <- process_fit_directory(dir_path) print(metrics)  # 4. Generate the daily dsashboard plot_hrv_dashboard(metrics)"},{"path":"https://sims1253.github.io/hrvester/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"See Reference Manual detailed function documentation.","code":""},{"path":"https://sims1253.github.io/hrvester/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"Contributions welcome! Please see CONTRIBUTING.md guidelines contribute (bug reports, feature requests, pull requests).","code":""},{"path":"https://sims1253.github.io/hrvester/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"0.4: Update important core components work intended 0.5: Improve error handling throughout package make robust 0.6: Finalize user-facing API 0.7: Add vignettes, algorithm metric documentation 1.0: Polish things :) 1.0+: Enhanced visualization features, interactive dashboard elements additional sport-specific metrics","code":""},{"path":"https://sims1253.github.io/hrvester/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"hrvester: Heart Rate Variability Analysis from FIT Files","text":"using research, please cite:","code":"@software{hrvester,   title = {hrvester: Athlete-Centric HRV Analysis Toolkit},   author = {Maximilian Scholz},   year = {2025},   url = {https://github.com/sims1253/hrvester} }"},{"path":"https://sims1253.github.io/hrvester/reference/analyze_readiness.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze HRV readiness status — analyze_readiness","title":"Analyze HRV readiness status — analyze_readiness","text":"function evaluates athlete's readiness training based HRV metrics. compares current day metrics 7-day rolling baseline provides training status along specific recommendations.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/analyze_readiness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze HRV readiness status — analyze_readiness","text":"","code":"analyze_readiness(current_metrics, baseline_metrics)"},{"path":"https://sims1253.github.io/hrvester/reference/analyze_readiness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze HRV readiness status — analyze_readiness","text":"current_metrics dataframe containing current day's HRV metrics. Must contain exactly one row. include: laying_rmssd (numeric): Current day's RMSSD laying position laying_resting_hr (numeric): Current day's resting heart rate orthostatic_rise (numeric): Current day's orthostatic response baseline_metrics dataframe containing previous 7 days' HRV metrics. include: laying_rmssd (numeric): Historical RMSSD values baseline calculation laying_resting_hr (numeric): Historical resting heart rate values orthostatic_rise (numeric): Historical orthostatic response values","code":""},{"path":"https://sims1253.github.io/hrvester/reference/analyze_readiness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze HRV readiness status — analyze_readiness","text":"list containing: status (character): Training status (\"FRESH\", \"NORMAL\", \"CAUTION\", \"WARNING\") recommendations (list): Training recommendations BJJ, strength, cardio flags (list): Additional warning flags high fatigue, poor recovery, overreaching risk metrics (list): Baseline values deviation calculations","code":""},{"path":"https://sims1253.github.io/hrvester/reference/cache_definition.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache Definition — cache_definition","title":"Cache Definition — cache_definition","text":"Defines structure cache data. function creates tibble containing necessary columns storing HRV metrics.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/cache_definition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache Definition — cache_definition","text":"","code":"cache_definition()"},{"path":"https://sims1253.github.io/hrvester/reference/cache_definition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache Definition — cache_definition","text":"tibble columns: source_file (character): Path source FIT file date (character): Date measurement week (numeric): Week number time_of_day (character): Time day (\"Morning\" \"Evening\") laying_rmssd (numeric): RMSSD laying position laying_sdnn (numeric): SDNN laying position laying_hr (numeric): Mean heart rate laying position laying_resting_hr (numeric): Resting heart rate standing_rmssd (numeric): RMSSD standing position standing_sdnn (numeric): SDNN standing position standing_hr (numeric): Mean heart rate standing position standing_max_hr (numeric): Maximum heart rate standing package_version (character): Version package activity (character): Type activity","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Heart Rate Recovery metrics — calculate_hrr","title":"Calculate Heart Rate Recovery metrics — calculate_hrr","text":"Computes various metrics related heart rate recovery","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Heart Rate Recovery metrics — calculate_hrr","text":"","code":"calculate_hrr(standing_hr, baseline_hr)"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Heart Rate Recovery metrics — calculate_hrr","text":"standing_hr Vector heart rate values standing baseline_hr Resting heart rate standing","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Heart Rate Recovery metrics — calculate_hrr","text":"List containing recovery metrics: hrr_60s Absolute recovery 60 seconds hrr_relative Relative recovery percentage orthostatic_rise Initial HR increase","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate HRV metrics from RR intervals — calculate_hrv","title":"Calculate HRV metrics from RR intervals — calculate_hrv","text":"Calculates key heart rate variability metrics including RMSSD SDNN","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate HRV metrics from RR intervals — calculate_hrv","text":"","code":"calculate_hrv(rr_intervals)"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate HRV metrics from RR intervals — calculate_hrv","text":"rr_intervals Numeric vector RR intervals seconds","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_hrv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate HRV metrics from RR intervals — calculate_hrv","text":"Named list containing: rmssd Root Mean Square Successive Differences (ms) sdnn Standard Deviation NN intervals (ms)","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_moving_averages.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate all moving averages — calculate_moving_averages","title":"Calculate all moving averages — calculate_moving_averages","text":"Adds moving averages relative changes HRV data","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_moving_averages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate all moving averages — calculate_moving_averages","text":"","code":"calculate_moving_averages(data, window_size = 7, min_fraction = 0.7)"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_moving_averages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate all moving averages — calculate_moving_averages","text":"data Dataframe HRV measurements window_size Number days moving average min_fraction Minimum fraction data required","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_moving_averages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate all moving averages — calculate_moving_averages","text":"Dataframe added moving averages","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_neural_recovery.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate full neural recovery score based on BioForce HRV methodology — calculate_neural_recovery","title":"Calculate full neural recovery score based on BioForce HRV methodology — calculate_neural_recovery","text":"function calculates comprehensive neural recovery score combining multiple HRV metrics. score based following components: RMSSD (parasympathetic recovery) Orthostatic response (autonomic balance) Heart rate recovery (recovery capacity)","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_neural_recovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate full neural recovery score based on BioForce HRV methodology — calculate_neural_recovery","text":"","code":"calculate_neural_recovery(data, window_size = 7)"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_neural_recovery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate full neural recovery score based on BioForce HRV methodology — calculate_neural_recovery","text":"data Dataframe containing HRV measurements. include: laying_rmssd (numeric): RMSSD laying position laying_resting_hr (numeric): Resting heart rate rmssd_ma (numeric): Moving average RMSSD (added calculate_moving_averages) standing_hr (numeric): Heart rate standing position hrr_60s (numeric): Heart rate recovery 60 seconds window_size Number days use calculating moving averages (default: 7). Used establish baseline values comparison. Must positive integer.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_neural_recovery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate full neural recovery score based on BioForce HRV methodology — calculate_neural_recovery","text":"Dataframe added columns: rmssd_score (numeric): Score based RMSSD ratio (0-40 points) ortho_score (numeric): Score based orthostatic response (0-30 points) hrr_score (numeric): Score based heart rate recovery (0-30 points) neural_recovery_score (numeric): Combined total score (0-100) recovery_status (character): Classification based total score","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_resting_hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate resting heart rate — calculate_resting_hr","title":"Calculate resting heart rate — calculate_resting_hr","text":"Estimates resting heart rate using various methods","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_resting_hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate resting heart rate — calculate_resting_hr","text":"","code":"calculate_resting_hr(   hr_data,   method = \"lowest_sustained\",   stability_threshold = 3,   window_size = 30 )"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_resting_hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate resting heart rate — calculate_resting_hr","text":"hr_data Vector heart rate values method Calculation method use stability_threshold Allowable HR variation window_size Window size samples","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_resting_hr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate resting heart rate — calculate_resting_hr","text":"Numeric resting heart rate value","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_robust_ma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rolling mean — calculate_robust_ma","title":"Calculate rolling mean — calculate_robust_ma","text":"Computes rolling mean minimum data requirements","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_robust_ma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rolling mean — calculate_robust_ma","text":"","code":"calculate_robust_ma(x, window = 7, min_fraction = 0.7)"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_robust_ma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rolling mean — calculate_robust_ma","text":"x Numeric vector window Window size min_fraction Minimum fraction non-NA values required","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_robust_ma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate rolling mean — calculate_robust_ma","text":"Numeric vector rolling means","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_trend_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate trend direction — calculate_trend_direction","title":"Helper function to calculate trend direction — calculate_trend_direction","text":"Determines direction trends HRV metrics using linear regression. function fits linear model values categorizes slope descriptive trend categories.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_trend_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate trend direction — calculate_trend_direction","text":"","code":"calculate_trend_direction(values)"},{"path":"https://sims1253.github.io/hrvester/reference/calculate_trend_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate trend direction — calculate_trend_direction","text":"values Numeric vector values analyze trend. contain least 2 values.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/calculate_trend_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to calculate trend direction — calculate_trend_direction","text":"Character string describing trend direction magnitude: \"Stable\" (abs(slope) < 0.1) \"Slight Increase\" (0.1 <= slope <= 0.5) \"Strong Increase\" (slope > 0.5) \"Slight Decrease\" (-0.5 <= slope < -0.1) \"Strong Decrease\" (slope < -0.5)","code":""},{"path":"https://sims1253.github.io/hrvester/reference/create_empty_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Create empty result row — create_empty_result","title":"Create empty result row — create_empty_result","text":"Helper function create empty result row NA values","code":""},{"path":"https://sims1253.github.io/hrvester/reference/create_empty_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create empty result row — create_empty_result","text":"","code":"create_empty_result(file_path, session_date, week, time_of_day)"},{"path":"https://sims1253.github.io/hrvester/reference/create_empty_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create empty result row — create_empty_result","text":"file_path Source file path session_date Date measurement week Week number time_of_day Time day","code":""},{"path":"https://sims1253.github.io/hrvester/reference/create_empty_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create empty result row — create_empty_result","text":"Tibble NA values","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_rr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract RR Interval Data from a FIT File Object — extract_rr_data","title":"Extract RR Interval Data from a FIT File Object — extract_rr_data","text":"Extracts RR interval data (HRV data) FIT file object.  function designed situations expect FIT file contain HRV data. HRV data found, issues warning returns empty numeric vector.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_rr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract RR Interval Data from a FIT File Object — extract_rr_data","text":"","code":"extract_rr_data(fit_object)"},{"path":"https://sims1253.github.io/hrvester/reference/extract_rr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract RR Interval Data from a FIT File Object — extract_rr_data","text":"fit_object FIT file object, typically created readFitFile.  object result reading FIT file expected contain HRV (RR interval) data.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_rr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract RR Interval Data from a FIT File Object — extract_rr_data","text":"data frame containing RR data, obtained directly hrv. HRV data found, function returns empty numeric vector (numeric(0)).  Unlike previous version, version perform filtering returned HRV data.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_rr_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract RR Interval Data from a FIT File Object — extract_rr_data","text":"function performs following steps: Input Validation: validates fit_object using validate_fit_object function (assumed defined elsewhere package). HRV Data Extraction: attempts extract HRV data using hrv. HRV Data Check: checks extracted HRV data NULL empty (zero rows). Return Value: HRV data found empty, function returns data frame returned hrv. HRV data NULL empty, function issues warning message (\"HRV data found FIT file\") returns empty numeric vector (numeric(0)).","code":""},{"path":[]},{"path":"https://sims1253.github.io/hrvester/reference/extract_rr_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract RR Interval Data from a FIT File Object — extract_rr_data","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have a FIT file named \"activity.fit\" that *should* # contain HRV data. fit_file <- FITfileR::readFitFile(\"activity.fit\") rr_data <- extract_rr_data(fit_file)  # If HRV data was present: # rr_data will be a data.frame (the result of FITfileR::hrv()).  # If no HRV data was found: # rr_data will be numeric(0). } # }"},{"path":"https://sims1253.github.io/hrvester/reference/extract_session_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract session metadata from FIT object — extract_session_data","title":"Extract session metadata from FIT object — extract_session_data","text":"Extracts processes session-related metadata FIT file object, including date, week number, time day classification.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_session_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract session metadata from FIT object — extract_session_data","text":"","code":"extract_session_data(fit_object)"},{"path":"https://sims1253.github.io/hrvester/reference/extract_session_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract session metadata from FIT object — extract_session_data","text":"fit_object object class FitFile","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_session_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract session metadata from FIT object — extract_session_data","text":"list containing: date (Date): session date week (numeric): Week number year time_of_day (character): Classification either \"Morning\" (4-13h) \"Evening\"","code":""},{"path":"https://sims1253.github.io/hrvester/reference/extract_session_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract session metadata from FIT object — extract_session_data","text":"Time day classified \"Morning\" measurements taken 04:00 13:00, \"Evening\" otherwise. classification particularly relevant HRV measurements can vary significantly morning evening readings.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/generate_daily_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate daily HRV report — generate_daily_report","title":"Generate daily HRV report — generate_daily_report","text":"Creates formatted text report summarizing current HRV status, metrics, recommendations.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/generate_daily_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate daily HRV report — generate_daily_report","text":"","code":"generate_daily_report(data)"},{"path":"https://sims1253.github.io/hrvester/reference/generate_daily_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate daily HRV report — generate_daily_report","text":"data dataframe containing HRV metrics least 8 consecutive days (current day plus 7-day baseline). include: date (Date): Measurement dates laying_rmssd (numeric): RMSSD laying position laying_resting_hr (numeric): Resting heart rate orthostatic_rise (numeric): Orthostatic response","code":""},{"path":"https://sims1253.github.io/hrvester/reference/generate_daily_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate daily HRV report — generate_daily_report","text":"formatted character string containing HRV report sections: Date status header Current metrics baseline comparisons Training recommendations BJJ, strength, cardio Warning flags present 7-day trend analysis RMSSD heart rate","code":""},{"path":"https://sims1253.github.io/hrvester/reference/get_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract HR data from FIT object — get_HR","title":"Extract HR data from FIT object — get_HR","text":"Extracts heart rate data handling list data frame formats","code":""},{"path":"https://sims1253.github.io/hrvester/reference/get_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract HR data from FIT object — get_HR","text":"","code":"get_HR(fit_object)"},{"path":"https://sims1253.github.io/hrvester/reference/get_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract HR data from FIT object — get_HR","text":"fit_object object class FitFile","code":""},{"path":"https://sims1253.github.io/hrvester/reference/get_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract HR data from FIT object — get_HR","text":"Numeric vector heart rate values","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrv_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot HRV summaries for a single orthostatic test fit file. — hrv_plot","title":"Plot HRV summaries for a single orthostatic test fit file. — hrv_plot","text":"Creates visualization heart rate variability (HRV) data FIT file. plot can display either heart rate (HR) RR interval data, annotations showing key metrics.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrv_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot HRV summaries for a single orthostatic test fit file. — hrv_plot","text":"","code":"hrv_plot(file_path, base = \"HR\")"},{"path":"https://sims1253.github.io/hrvester/reference/hrv_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot HRV summaries for a single orthostatic test fit file. — hrv_plot","text":"file_path Path FIT file process base Character indicating type data plot: \"HR\": Heart rate data \"RR\": RR interval data","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrv_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot HRV summaries for a single orthostatic test fit file. — hrv_plot","text":"ggplot2 plot object","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrv_trend_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Trend plots of HRV summaries for orthostatic tests — hrv_trend_plot","title":"Trend plots of HRV summaries for orthostatic tests — hrv_trend_plot","text":"Creates trend plots HRV metrics, showing daily values moving averages.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrv_trend_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trend plots of HRV summaries for orthostatic tests — hrv_trend_plot","text":"","code":"hrv_trend_plot(metrics, just_rssme = FALSE)"},{"path":"https://sims1253.github.io/hrvester/reference/hrv_trend_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trend plots of HRV summaries for orthostatic tests — hrv_trend_plot","text":"metrics tibble data frame containing HRV metrics. Output process_fit_directory just_rssme Logical indicating whether focus RMSSD resting HR metrics. Default: FALSE","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrv_trend_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trend plots of HRV summaries for orthostatic tests — hrv_trend_plot","text":"ggplot2 plot object","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrvester-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hrvester: Simple Heart Rate Variability Analysis — hrvester-package","title":"hrvester: Simple Heart Rate Variability Analysis — hrvester-package","text":"Provides tools analyzing Heart Rate Variability (HRV) FIT files. Focuses orthostatic test analysis (laying standing measurements).","code":""},{"path":"https://sims1253.github.io/hrvester/reference/hrvester-package.html","id":"main-functions","dir":"Reference","previous_headings":"","what":"Main Functions","title":"hrvester: Simple Heart Rate Variability Analysis — hrvester-package","text":"process_fit_directory(): Process multiple FIT files caching process_fit_file(): Process single FIT file plot_hrv_trend(): Create trend plots HRV metrics","code":""},{"path":[]},{"path":"https://sims1253.github.io/hrvester/reference/hrvester-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hrvester: Simple Heart Rate Variability Analysis — hrvester-package","text":"Maintainer: Maximilian Scholz dev.scholz@mailbox.org","code":""},{"path":"https://sims1253.github.io/hrvester/reference/moving_average_rr_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Moving Average RR Interval Validation — moving_average_rr_validation","title":"Moving Average RR Interval Validation — moving_average_rr_validation","text":"Validates RR intervals using moving average filter, flagging potentially erroneous intervals.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/moving_average_rr_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moving Average RR Interval Validation — moving_average_rr_validation","text":"","code":"moving_average_rr_validation(   rr_segment,   is_valid = rep(TRUE, length(rr_segment)),   window_size = 7,   threshold = 0.2,   centered_window = FALSE )"},{"path":"https://sims1253.github.io/hrvester/reference/moving_average_rr_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moving Average RR Interval Validation — moving_average_rr_validation","text":"rr_segment numeric vector RR intervals (milliseconds). is_valid logical vector indicating priori validity RR interval. Defaults TRUE intervals. window_size integer specifying size moving window (must odd). Defaults 7. threshold numeric value representing maximum allowed proportional deviation moving median. Defaults 0.2 (20%). centered logical value indicating whether moving window centered. Defaults FALSE.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/moving_average_rr_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moving Average RR Interval Validation — moving_average_rr_validation","text":"list containing two elements: is_valid logical vector length rr_segment, TRUE indicates valid RR interval FALSE indicates invalid interval, applying moving average filter. cleaned_rr numeric vector containing valid RR intervals.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/moving_average_rr_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Moving Average RR Interval Validation — moving_average_rr_validation","text":"Moving Average Filter: moving median calculated RR interval using window size window_size. current RR interval excluded median calculation.  proportional deviation calculated. deviation exceeds threshold, interval marked invalid. priori valid intervals within window used. intervals within window (excluding current) invalid, validity remains unchanged. moving window centered. boundaries, window truncated.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/moving_average_rr_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moving Average RR Interval Validation — moving_average_rr_validation","text":"","code":"# Sample RR interval data (in seconds) rr_data <- c(   0.8, 0.9, 0.7, 1.5, 0.85, 0.95, 0.88, 0.92, 0.8,   4.0 )  # Validate the RR intervals result <- moving_average_rr_validation(rr_data)  # Print the results print(result$is_valid) #>  [1]  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE print(result$cleaned_rr) #> [1] 0.80 0.90 0.85 0.95 0.88 0.92 0.80  # Example with pre-existing invalid intervals is_valid_initial <- c(   TRUE, TRUE, FALSE, TRUE, TRUE, TRUE,   TRUE, TRUE, TRUE, TRUE ) result2 <- moving_average_rr_validation(rr_data,   is_valid = is_valid_initial,   window_size = 5 ) print(result2) #> $is_valid #>  [1]  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE #>  #> $cleaned_rr #> [1] 0.80 0.90 0.85 0.95 0.88 0.92 0.80 #>"},{"path":"https://sims1253.github.io/hrvester/reference/plot_bjj_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BJJ-specific recovery metrics — plot_bjj_metrics","title":"Plot BJJ-specific recovery metrics — plot_bjj_metrics","text":"Generates neural recovery score plot specifically tailored Brazilian Jiu-Jitsu athletes. score combines: RMSSD relative 7-day average Orthostatic response","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_bjj_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BJJ-specific recovery metrics — plot_bjj_metrics","text":"","code":"plot_bjj_metrics(data)"},{"path":"https://sims1253.github.io/hrvester/reference/plot_bjj_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BJJ-specific recovery metrics — plot_bjj_metrics","text":"data data frame containing HRV metrics columns: date: Date measurement laying_rmssd: RMSSD laying position rmssd_ma: 7-day moving average RMSSD standing_hr: Standing heart rate laying_hr: Laying heart rate","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_bjj_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot BJJ-specific recovery metrics — plot_bjj_metrics","text":"ggplot2 line plot showing neural recovery score time","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_dashboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Create comprehensive HRV dashboard — plot_hrv_dashboard","title":"Create comprehensive HRV dashboard — plot_hrv_dashboard","text":"Generates 4-panel dashboard showing key HRV metrics including: RMSSD trend training zones Orthostatic response Heart rate recovery Resting heart rate trend","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_dashboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create comprehensive HRV dashboard — plot_hrv_dashboard","text":"","code":"plot_hrv_dashboard(data)"},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_dashboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create comprehensive HRV dashboard — plot_hrv_dashboard","text":"data data frame containing HRV metrics columns: date: Date measurement laying_rmssd: RMSSD laying position rmssd_ma: 7-day moving average RMSSD standing_hr: Standing heart rate laying_hr: Laying heart rate hrr_60s: Heart rate recovery 60 seconds laying_resting_hr: Resting heart rate resting_hr_ma: 7-day moving average resting HR","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_dashboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create comprehensive HRV dashboard — plot_hrv_dashboard","text":"patchwork object combining four ggplot2 plots","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_trends.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot HRV trends — plot_hrv_trends","title":"Plot HRV trends — plot_hrv_trends","text":"Creates trend plot RMSSD values moving average normal range shading.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_trends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot HRV trends — plot_hrv_trends","text":"","code":"plot_hrv_trends(data)"},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_trends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot HRV trends — plot_hrv_trends","text":"data Data frame containing HRV metrics","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_hrv_trends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot HRV trends — plot_hrv_trends","text":"ggplot2 plot object","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_weekly_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create weekly summary heatmap — plot_weekly_heatmap","title":"Create weekly summary heatmap — plot_weekly_heatmap","text":"Generates heatmap showing weekly recovery status based RMSSD changes. Status categories : Fresh: RMSSD change > 5% Normal: RMSSD change -5% 5% Caution: RMSSD change -10% -5% Warning: RMSSD change < -10%","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_weekly_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create weekly summary heatmap — plot_weekly_heatmap","text":"","code":"plot_weekly_heatmap(data, method = \"neural_recovery_score\")"},{"path":"https://sims1253.github.io/hrvester/reference/plot_weekly_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create weekly summary heatmap — plot_weekly_heatmap","text":"data data frame containing HRV metrics columns: method Either neural_recovery_score rmssd_change date: Date measurement rmssd_change: Percentage change RMSSD","code":""},{"path":"https://sims1253.github.io/hrvester/reference/plot_weekly_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create weekly summary heatmap — plot_weekly_heatmap","text":"ggplot2 heatmap object","code":""},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Process directory of FIT files with caching — process_fit_directory","title":"Process directory of FIT files with caching — process_fit_directory","text":"Processes multiple FIT files specified directory, utilizing caching avoid reprocessing unchanged files. function efficiently processes new updated files directory, leveraging cache skip already processed files.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process directory of FIT files with caching — process_fit_directory","text":"","code":"process_fit_directory(   dir_path,   cache_file = file.path(dir_path, \"hrv_cache.csv\"),   standing_time = 180,   transition_time = 20,   laying_time = 180,   min_rr = 272,   max_rr = 2000,   window_size = 7,   threshold = 0.2,   centered_transition = TRUE,   centered_window = FALSE,   warmup = 70,   clear_cache = FALSE,   sport_name = \"OST\" )"},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process directory of FIT files with caching — process_fit_directory","text":"dir_path directory path containing FIT files process. cache_file Path cache file storing processed data. Defaults \"hrv_cache.csv\" within directory. standing_time Time seconds consider standing. Default 180 seconds. transition_time Time seconds consider transition. Default 20 seconds. laying_time Time seconds consider laying. Default 180 seconds. min_rr Minimum RR interval milliseconds. Default 272 ms. max_rr Maximum RR interval milliseconds. Default 2000 ms. window_size Window size moving average calculation. Default 7. threshold Threshold artifact detection. Default 0.2. clear_cache Logical indicating whether clear existing cache. Default FALSE.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process directory of FIT files with caching — process_fit_directory","text":"tibble containing HRV metrics processed FIT files","code":""},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a single FIT file — process_fit_file","title":"Process a single FIT file — process_fit_file","text":"Calculates HRV metrics FIT file, integrating data extraction, RR interval processing, HRV calculation error handling.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a single FIT file — process_fit_file","text":"","code":"process_fit_file(   file_path,   standing_time = 180,   transition_time = 20,   laying_time = 180,   min_rr = 272,   max_rr = 2000,   window_size = 7,   threshold = 0.2,   centered_transition = TRUE,   centered_window = FALSE,   warmup = 70,   sport_name = \"OST\" )"},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a single FIT file — process_fit_file","text":"file_path Path FIT file standing_time Time seconds consider standing transition_time Time seconds consider transition laying_time Time seconds consider laying min_rr Minimum RR interval milliseconds max_rr Maximum RR interval milliseconds window_size Window size moving average calculation threshold Threshold artifact detection centered_transition Logical indicating whether transition time split laying standing times. FALSE, transition time taken laying phase. centered_window Logical indicating whether moving window centered. Defaults FALSE. warmup Time seconds start discarded sport_name Name sport fit file. Used filter.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/process_fit_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a single FIT file — process_fit_file","text":"Tibble containing HRV metrics","code":""},{"path":"https://sims1253.github.io/hrvester/reference/read_fit_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely read a FIT file — read_fit_file","title":"Safely read a FIT file — read_fit_file","text":"Reads FIT file proper error handling validation. function ensures consistent error handling across package reading FIT files.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/read_fit_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely read a FIT file — read_fit_file","text":"","code":"read_fit_file(file_path)"},{"path":"https://sims1253.github.io/hrvester/reference/read_fit_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely read a FIT file — read_fit_file","text":"file_path Character string specifying path FIT file","code":""},{"path":"https://sims1253.github.io/hrvester/reference/read_fit_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely read a FIT file — read_fit_file","text":"object class FitFile","code":""},{"path":"https://sims1253.github.io/hrvester/reference/read_fit_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safely read a FIT file — read_fit_file","text":"","code":"if (FALSE) { # \\dontrun{ fit_object <- read_fit_file(\"path/to/file.fit\") } # }"},{"path":"https://sims1253.github.io/hrvester/reference/rr_full_phase_processing.html","id":null,"dir":"Reference","previous_headings":"","what":"Full RR Interval Processing Pipeline — rr_full_phase_processing","title":"Full RR Interval Processing Pipeline — rr_full_phase_processing","text":"function performs complete RR interval processing pipeline, including artifact detection, physiological plausibility checks, moving average validation.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_full_phase_processing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full RR Interval Processing Pipeline — rr_full_phase_processing","text":"","code":"rr_full_phase_processing(   rr_segment,   is_valid = rep(TRUE, length(rr_segment)),   min_rr = 272,   max_rr = 2000,   window_size = 7,   threshold = 0.2,   centered_window = FALSE )"},{"path":"https://sims1253.github.io/hrvester/reference/rr_full_phase_processing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full RR Interval Processing Pipeline — rr_full_phase_processing","text":"rr_segment numeric vector RR intervals (milliseconds). min_rr minimum acceptable RR interval (milliseconds). Defaults 272 ms (corresponding maximum heart rate ~220 bpm). max_rr maximum acceptable RR interval (milliseconds). Defaults 2000 ms (corresponding minimum heart rate 30 bpm). window_size integer specifying size moving window (must odd) moving average validation. Defaults 7. threshold numeric value representing maximum allowed proportional deviation moving median moving average validation. Defaults 0.2 (20%).","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_full_phase_processing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full RR Interval Processing Pipeline — rr_full_phase_processing","text":"list containing two elements: is_valid logical vector length rr_segment, TRUE indicates valid RR interval FALSE indicates invalid interval processing steps. cleaned_rr numeric vector containing valid RR intervals processing steps.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_full_phase_processing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full RR Interval Processing Pipeline — rr_full_phase_processing","text":"function sequentially applies following validation steps: Artifact Detection: rr_validate_measure_artifacts used flag common measurement artifacts (e.g., values 65.535 Garmin watches). Physiological Validation: rr_validate_physiological used flag intervals outside specified min_rr max_rr limits. Moving Average Validation: moving_average_rr_validation used flag intervals deviate significantly local moving median, using specified window_size threshold. function uses 'running result' approach, is_valid vector step passed input next. ensures invalid intervals identified earlier steps considered subsequent validation steps.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_full_phase_processing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full RR Interval Processing Pipeline — rr_full_phase_processing","text":"","code":"# Sample RR interval data (in milliseconds) rr_data <- c(   65.535, 500, 250, 750, 800, 1500, 820, 780,   850, 3000, 800, 830, 790 )  # Process the RR intervals result <- rr_full_phase_processing(rr_data)  # Print the results print(result$is_valid) #>  [1] FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE #> [13]  TRUE print(result$cleaned_rr) #> [1] 750 800 820 780 850 800 830 790  # Example with custom parameters rr_data2 <- c(   65535, 600, 300, 700, 900,   2200, 750 ) result2 <- rr_full_phase_processing(   rr_data2,   min_rr = 400,   max_rr = 1800,   window_size = 5,   threshold = 0.15 ) #> Error in rr_full_phase_processing(rr_data2, min_rr = 400, max_rr = 1800,     window_size = 5, threshold = 0.15): unused arguments (window_size = 5, threshold = 0.15) print(result2) #> Error: object 'result2' not found"},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_measure_artifacts.html","id":null,"dir":"Reference","previous_headings":"","what":"RR validation that flags intervals of 65.535 as invalid — rr_validate_measure_artifacts","title":"RR validation that flags intervals of 65.535 as invalid — rr_validate_measure_artifacts","text":"taking raw RR output Garmin watch, entries 65.535, just empty measurement, new heartbeat detected yet.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_measure_artifacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RR validation that flags intervals of 65.535 as invalid — rr_validate_measure_artifacts","text":"","code":"rr_validate_measure_artifacts(   rr_segment,   is_valid = rep(TRUE, length(rr_segment)) )"},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_measure_artifacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RR validation that flags intervals of 65.535 as invalid — rr_validate_measure_artifacts","text":"rr_segment numeric vector RR intervals (milliseconds). is_valid logical vector indicating validity RR interval. Defaults TRUE.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_measure_artifacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RR validation that flags intervals of 65.535 as invalid — rr_validate_measure_artifacts","text":"list containing two elements: is_valid logical vector length rr_segment, TRUE indicates valid RR interval FALSE indicates invalid interval. cleaned_rr numeric vector containing valid RR intervals.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_physiological.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate RR Intervals Based on Physiological Limits — rr_validate_physiological","title":"Validate RR Intervals Based on Physiological Limits — rr_validate_physiological","text":"function validates RR intervals based minimum maximum physiologically plausible values. Intervals outside specified range marked invalid.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_physiological.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate RR Intervals Based on Physiological Limits — rr_validate_physiological","text":"","code":"rr_validate_physiological(   rr_segment,   is_valid = rep(TRUE, length(rr_segment)),   min_rr = 272,   max_rr = 2000 )"},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_physiological.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate RR Intervals Based on Physiological Limits — rr_validate_physiological","text":"rr_segment numeric vector RR intervals (milliseconds). is_valid logical vector indicating priori validity RR interval.  Defaults TRUE intervals. min_rr minimum acceptable RR interval (milliseconds). Defaults 272 ms (corresponding maximum heart rate ~220 bpm). max_rr maximum acceptable RR interval (milliseconds). Defaults 2000 ms (corresponding minimum heart rate 30 bpm).","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_physiological.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate RR Intervals Based on Physiological Limits — rr_validate_physiological","text":"list containing two elements: is_valid logical vector length rr_segment, TRUE indicates valid RR interval FALSE indicates invalid interval applying physiological limits. cleaned_rr numeric vector containing valid RR intervals.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/rr_validate_physiological.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate RR Intervals Based on Physiological Limits — rr_validate_physiological","text":"","code":"# Example with some values outside the default range rr_data <- c(250, 500, 1000, 1800, 2500) result <- rr_validate_physiological(rr_data) print(result) #> $is_valid #> [1] FALSE  TRUE  TRUE  TRUE FALSE #>  #> $cleaned_rr #> [1]  500 1000 1800 #>   # Example with pre-existing invalid values and a custom range rr_data2 <- c(250, 500, 1000, 1800, 2500) is_valid_initial <- c(TRUE, FALSE, TRUE, TRUE, FALSE) result2 <- rr_validate_physiological(rr_data2,   is_valid = is_valid_initial,   min_rr = 400,   max_rr = 1500 ) print(result2) #> $is_valid #> [1] FALSE FALSE  TRUE FALSE FALSE #>  #> $cleaned_rr #> [1] 1000 #>   # Example with empty input result_empty <- rr_validate_physiological(numeric(0)) print(result_empty) #> $is_valid #> logical(0) #>  #> $cleaned_rr #> numeric(0) #>"},{"path":"https://sims1253.github.io/hrvester/reference/safe_file_operation.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe file operations wrapper — safe_file_operation","title":"Safe file operations wrapper — safe_file_operation","text":"Internal function safely perform file operations proper error handling","code":""},{"path":"https://sims1253.github.io/hrvester/reference/safe_file_operation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe file operations wrapper — safe_file_operation","text":"","code":"safe_file_operation(operation, ...)"},{"path":"https://sims1253.github.io/hrvester/reference/safe_file_operation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe file operations wrapper — safe_file_operation","text":"operation Function perform file operation ... Arguments pass operation","code":""},{"path":"https://sims1253.github.io/hrvester/reference/safe_file_operation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe file operations wrapper — safe_file_operation","text":"Result operation throws error","code":""},{"path":"https://sims1253.github.io/hrvester/reference/split_rr_phases.html","id":null,"dir":"Reference","previous_headings":"","what":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","title":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","text":"function splits RR intervals orthostatic test phases (laying, transition, standing) based specified time thresholds.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/split_rr_phases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","text":"","code":"split_rr_phases(   rr_intervals,   session_info,   laying_time = 180,   transition_time = 20,   standing_time = 180,   centered_transition = TRUE )"},{"path":"https://sims1253.github.io/hrvester/reference/split_rr_phases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","text":"rr_intervals data frame containing RR interval data.  Must include column named time.  function add elapsed_time column phase column. session_info list containing session information.  Must include numeric element named duration representing total duration recording (units laying_time, transition_time, standing_time). laying_time Numeric. duration laying phase (e.g., seconds). Must non-negative. transition_time Numeric. duration transition phase (e.g., seconds). Must non-negative. standing_time Numeric. duration standing phase (e.g., seconds). Must non-negative. centered_transition Indicates transition time split laying standig times. FALSE, transition time taken laying phase.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/split_rr_phases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","text":"data frame data rr_intervals, two added columns: elapsed_time cumulative time start recording. phase character string indicating phase: \"laying\", \"transition\", \"standing\".","code":""},{"path":"https://sims1253.github.io/hrvester/reference/split_rr_phases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","text":"sum laying_time standing_time exceed session_info$duration. rr_intervals empty data frame, warning issued, empty data frame phase column returned.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/split_rr_phases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split RR Intervals Into Orthostatic Test Phases — split_rr_phases","text":"","code":"# Example with valid inputs rr_data <- data.frame(time = 1:100) session_data <- list(duration = 100) result <- split_rr_phases(rr_data, session_data, 30, 20, 50) #>     time #> 1      1 #> 2      2 #> 3      3 #> 4      4 #> 5      5 #> 6      6 #> 7      7 #> 8      8 #> 9      9 #> 10    10 #> 11    11 #> 12    12 #> 13    13 #> 14    14 #> 15    15 #> 16    16 #> 17    17 #> 18    18 #> 19    19 #> 20    20 #> 21    21 #> 22    22 #> 23    23 #> 24    24 #> 25    25 #> 26    26 #> 27    27 #> 28    28 #> 29    29 #> 30    30 #> 31    31 #> 32    32 #> 33    33 #> 34    34 #> 35    35 #> 36    36 #> 37    37 #> 38    38 #> 39    39 #> 40    40 #> 41    41 #> 42    42 #> 43    43 #> 44    44 #> 45    45 #> 46    46 #> 47    47 #> 48    48 #> 49    49 #> 50    50 #> 51    51 #> 52    52 #> 53    53 #> 54    54 #> 55    55 #> 56    56 #> 57    57 #> 58    58 #> 59    59 #> 60    60 #> 61    61 #> 62    62 #> 63    63 #> 64    64 #> 65    65 #> 66    66 #> 67    67 #> 68    68 #> 69    69 #> 70    70 #> 71    71 #> 72    72 #> 73    73 #> 74    74 #> 75    75 #> 76    76 #> 77    77 #> 78    78 #> 79    79 #> 80    80 #> 81    81 #> 82    82 #> 83    83 #> 84    84 #> 85    85 #> 86    86 #> 87    87 #> 88    88 #> 89    89 #> 90    90 #> 91    91 #> 92    92 #> 93    93 #> 94    94 #> 95    95 #> 96    96 #> 97    97 #> 98    98 #> 99    99 #> 100  100 #> [1] \"list\" #> Error in split_rr_phases(rr_data, session_data, 30, 20, 50): rr_intervals must be a tibble. head(result) #> Error: object 'result' not found  # Example with an empty rr_intervals data frame rr_empty <- data.frame(time = numeric()) session_data <- list(duration = 60) result_empty <- split_rr_phases(rr_empty, session_data, 20, 10, 30) #> [1] time #> <0 rows> (or 0-length row.names) #> [1] \"list\" #> Error in split_rr_phases(rr_empty, session_data, 20, 10, 30): rr_intervals must be a tibble. print(result_empty) #> Error: object 'result_empty' not found  if (FALSE) { # \\dontrun{ # Example with invalid input (sum of times exceeds duration) rr_data <- data.frame(time = 1:100) session_data <- list(duration = 100) # This will throw an error result_error <- split_rr_phases(rr_data, session_data, 50, 60, 70) } # }"},{"path":"https://sims1253.github.io/hrvester/reference/training_recommendations.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate training recommendations based on neural recovery score — training_recommendations","title":"Generate training recommendations based on neural recovery score — training_recommendations","text":"Provides training recommendations based calculated neural recovery score. Offers different recommendations BJJ training general strength training.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/training_recommendations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate training recommendations based on neural recovery score — training_recommendations","text":"","code":"training_recommendations(score, primary_type = \"BJJ\")"},{"path":"https://sims1253.github.io/hrvester/reference/training_recommendations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate training recommendations based on neural recovery score — training_recommendations","text":"score Neural recovery score (0-100) primary_type Primary training type (\"BJJ\" \"Strength\", case-insensitive)","code":""},{"path":"https://sims1253.github.io/hrvester/reference/training_recommendations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate training recommendations based on neural recovery score — training_recommendations","text":"list containing training recommendations including: status (character): Current recovery status intensity (character): Recommended training intensity volume (character): Recommended training volume focus (character): Recommended training focus bjj_specific (character): BJJ-specific recommendations (applicable) score (numeric): original neural recovery score","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_cache_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate cache structure — validate_cache_structure","title":"Validate cache structure — validate_cache_structure","text":"Internal function validate structure loaded cache data","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_cache_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate cache structure — validate_cache_structure","text":"","code":"validate_cache_structure(cache_data)"},{"path":"https://sims1253.github.io/hrvester/reference/validate_cache_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate cache structure — validate_cache_structure","text":"cache_data Dataframe validate","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_cache_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate cache structure — validate_cache_structure","text":"TRUE valid, throws error invalid","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_fit_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FIT Object — validate_fit_object","title":"Validate FIT Object — validate_fit_object","text":"placeholder actual validation function.  real package, function contain checks ensure fit_object valid object expected type (likely list environment resulting readFitFile).","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_fit_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FIT Object — validate_fit_object","text":"","code":"validate_fit_object(fit_object)"},{"path":"https://sims1253.github.io/hrvester/reference/validate_fit_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FIT Object — validate_fit_object","text":"fit_object object validate.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate input parameters — validate_inputs","title":"Validate input parameters — validate_inputs","text":"Internal function validate input parameters process_fit_directory","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate input parameters — validate_inputs","text":"","code":"validate_inputs(dir_path, cache_file, clear_cache)"},{"path":"https://sims1253.github.io/hrvester/reference/validate_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate input parameters — validate_inputs","text":"dir_path Directory path cache_file Cache file path clear_cache Clear cache flag","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate input parameters — validate_inputs","text":"TRUE valid, throws error invalid","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_rr.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate RR Interval Segment — validate_rr","title":"Validate RR Interval Segment — validate_rr","text":"function validates RR interval segment, ensuring numeric vector containing positive values NA values.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_rr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate RR Interval Segment — validate_rr","text":"","code":"validate_rr(rr_segment)"},{"path":"https://sims1253.github.io/hrvester/reference/validate_rr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate RR Interval Segment — validate_rr","text":"rr_segment numeric vector RR intervals (milliseconds).","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_validity.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Validity Vector — validate_validity","title":"Validate Validity Vector — validate_validity","text":"function validates logical vector indicating validity RR intervals, ensuring correct type, length, contains NA values.","code":""},{"path":"https://sims1253.github.io/hrvester/reference/validate_validity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Validity Vector — validate_validity","text":"","code":"validate_validity(is_valid, rr_segment)"},{"path":"https://sims1253.github.io/hrvester/reference/validate_validity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Validity Vector — validate_validity","text":"is_valid logical vector indicating validity RR interval. rr_segment numeric vector RR intervals (milliseconds).","code":""}]
