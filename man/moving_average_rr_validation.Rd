% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rr_processing.R
\name{moving_average_rr_validation}
\alias{moving_average_rr_validation}
\title{Moving Average RR Interval Validation}
\usage{
moving_average_rr_validation(
  rr_segment,
  is_valid = rep(TRUE, length(rr_segment)),
  window_size = 7,
  threshold = 0.2,
  centered_window = FALSE
)
}
\arguments{
\item{rr_segment}{A numeric vector of RR intervals (in milliseconds).}

\item{is_valid}{A logical vector indicating the \emph{a priori} validity of each
RR interval. Defaults to \code{TRUE} for all intervals.}

\item{window_size}{An integer specifying the size of the moving window (must
be odd). Defaults to 7.}

\item{threshold}{A numeric value representing the maximum allowed
proportional deviation from the moving median. Defaults to 0.2 (20\%).}

\item{centered}{A logical value indicating whether the moving window should be centered. Defaults to FALSE.}
}
\value{
A list containing two elements:
\item{is_valid}{A logical vector of the same length as \code{rr_segment}, where
\code{TRUE} indicates a valid RR interval and \code{FALSE} indicates an invalid
interval, \emph{after} applying the moving average filter.}
\item{cleaned_rr}{A numeric vector containing only the valid RR intervals.}
}
\description{
Validates RR intervals using a moving average filter, flagging potentially
erroneous intervals.
}
\details{
\strong{Moving Average Filter:} A moving median is calculated for each RR
interval using a window of size \code{window_size}. The current RR interval
is excluded from the median calculation.  The proportional deviation is
calculated. If this deviation exceeds the \code{threshold}, the interval is
marked as invalid. Only \emph{a priori} valid intervals within the window are
used. If all intervals within the window (excluding current) are
invalid, the validity remains unchanged.

The moving window is centered. At the boundaries, the window is truncated.
}
\examples{
# Sample RR interval data (in seconds)
rr_data <- c(
  0.8, 0.9, 0.7, 1.5, 0.85, 0.95, 0.88, 0.92, 0.8,
  4.0
)

# Validate the RR intervals
result <- moving_average_rr_validation(rr_data)

# Print the results
print(result$is_valid)
print(result$cleaned_rr)

# Example with pre-existing invalid intervals
is_valid_initial <- c(
  TRUE, TRUE, FALSE, TRUE, TRUE, TRUE,
  TRUE, TRUE, TRUE, TRUE
)
result2 <- moving_average_rr_validation(rr_data,
  is_valid = is_valid_initial,
  window_size = 5
)
print(result2)

}
